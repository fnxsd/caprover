captainVersion: "4"
caproverOneClickApp:
  description: "PostgreSQL heavy_plus_sign REST, low-code, simplify and accelerate development, zap instant, realtime, high-performance on any Postgres application, existing or new."
  instructions:
    start: Install prest and start using it.
    end: Have fun!
  variables:
    - id: $$cap_app_version
      description: Version of prest. See https://hub.docker.com/r/prest/prest/tags for valid tags
      defaultValue: v1.1
      label: App Version
    - id: $$cap_postgres_version
      label: Postgres Version
      defaultValue: "15-alpine"
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/library/postgres/tags/
      validRegex: /^([^\s^\/])+$/
    - id: $$cap_postgres_db
      label: Postgres DB
      defaultValue: "prest"
    - id: $$cap_postgres_user
      label: Postgres User
      defaultValue: "prest"
    - id: $$cap_postgres_password
      label: Postgres Password
      defaultValue: $$cap_gen_random_hex(16)
  displayName: prest
  isOfficial: false
  documentation: "https://docs.prestd.com/"
services:
  $$cap_appname:
    image: prest/prest:$$cap_app_version
    environment:
      PREST_PG_HOST: srv-captain--$$cap_appname-db
      PREST_PG_PASS: $$cap_postgres_password
      PREST_PG_DATABASE: $$cap_postgres_db
      PREST_PG_USER: $$cap_postgres_user
      PREST_PG_PORT: 5432
      PREST_SSL_MODE: disable
      PREST_DEBUG: false
      PREST_AUTH_ENABLED: true
      PREST_CACHE: false
      PREST_CACHE_ENBLED: false

    caproverExtra:
      containerHttpPort: "3000"
  $$cap_appname-db:
    image: postgres:$$cap_postgres_version
    volumes:
      - "$$cap_appname-db-data:/var/lib/postgresql/data"
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: $$cap_postgres_password
      POSTGRES_USER: $$cap_postgres_user
      POSTGRES_DB: $$cap_postgres_db
    caproverExtra:
      notExposeAsWebApp: true
