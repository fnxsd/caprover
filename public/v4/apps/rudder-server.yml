captainVersion: "4"
caproverOneClickApp:
  description:
    "With RudderStack, you can easily collect and send customer data in real-time from your warehouses to the tools used
    by marketing, analytics, product, and customer success teams."
  instructions:
    start: Install rudder-server and start using it.
    end: Have fun!
  variables:
    - id: $$cap_app_version
      description:
        Version of rudder-server. See
        https://hub.docker.com/r/rudderlabs/rudder-server/tags?page=1&ordering=last_updated for available versions.
      defaultValue: latest
      label: App Version
    - id: $$cap_db_version
      label: Database Version
      description: Database version. See https://hub.docker.com/_/postgres for available versions.
      defaultValue: 15-alpine
    - id: $$cap_db_user
      label: Database user
      description: Database username
      defaultValue: rudder

    - id: $$cap_db_name
      label: Database name
      description: Database name
      defaultValue: $$cap_db_name

    - id: $$cap_db_pass
      label: Database Password
      description: Password to connect to the database
      defaultValue: $$cap_gen_random_hex(16)

  displayName: rudder-server
  isOfficial: false
  documentation: "https://www.rudderstack.com/docs/"
services:
  $$cap_appname:
    image: rudder-server:$$cap_app_version
    volumes:
      - $$cap_appname-data:/data/rudder-server
    environment: []
    caproverExtra:
      containerHttpPort: "3000"

  $$cap_appname-db:
    image: postgres:$$cap_db_version
    environment:
      - POSTGRES_USER=$$cap_db_user
      - POSTGRES_PASSWORD=$$cap_db_pass
      - POSTGRES_DB=$$cap_db_name
    ports:
      - "6432:5432"
  $$cap_appname-backend:
    depends_on:
      - srv-captain--cap_appname-db
      - srv-captain--cap_appname-metrics-exporter
      - srv-captain--cap_appname-d-transformer
    image: rudderlabs/rudder-server:$$cap_app_version
    entrypoint: sh -c '/wait-for srv-captain--cap_appname-db:5432 -- /rudder-server'
    caproverExtra:
      containerHttpPort: "8080"
    environment:
      - JOBS_DB_HOST=srv-captain--cap_appname-db
      - JOBS_DB_USER=$$cap_db_user
      - JOBS_DB_PORT=5432
      - JOBS_DB_DB_NAME=$$cap_db_name
      - JOBS_DB_PASSWORD=$$cap_db_pass
      - DEST_TRANSFORM_URL=http://srv-captain--cap_appname-d-transformer:9090
      - CONFIG_BACKEND_URL=https://api.rudderstack.com
      - WORKSPACE_TOKEN=<your_workspace_token> # Must be written without quotes e.g. WORKSPACE_TOKEN=20TokEO34NWitou2t3quO8teS7
      - STATSD_SERVER_URL=srv-captain--cap_appname-metrics-exporter:9125
      # - RSERVER_BACKEND_CONFIG_CONFIG_FROM_FILE=true
      # - RSERVER_BACKEND_CONFIG_CONFIG_JSONPATH=<workspace_config_filepath_in_container> # For ex., /etc/rudderstack/workspaceConfig.json
    # Uncomment the following lines to mount workspaceConfig file
    # volumes:
    #   - <absolute_path_to_workspace_config>:<workspace_config_filepath_in_container> # Value for <workspace_config_filepath_in_container> should be same as the value provided for RSERVER_BACKEND_CONFIG_CONFIG_JSONPATH
  $$cap_appname-d-transformer:
    depends_on:
      - metrics-exporter
    image: rudderlabs/rudder-transformer:latest
    environment:
      - STATSD_SERVER_HOST=srv-captain--cap_appname-metrics-exporter
      - STATSD_SERVER_PORT="9125"
  # minio:
  #   image: minio/minio
  #   ports:
  #     - "9000:9000"
  #   command: server /data
  $$cap_appname-metrics-exporter:
    image: prom/statsd-exporter:v0.22.4
