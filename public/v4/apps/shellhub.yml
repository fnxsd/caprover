captainVersion: 4
caproverOneClickApp:
  instructions:
    start: Install shellhub.
    end: shellhub is deployed.
  variables:
    - id: $$cap_shellhub_version
      label: Shellhub Version
      defaultValue: "latest"
      description: Checkout their docker page for the valid tags https://hub.docker.com/r/alexta69/shellhub/tags
    - id: $$cap_shellhub_tenant_id
      label: Shellhub Tenant ID
      defaultValue: "YOUR_TENANT_ID"
      description: The tenant ID of your Shellhub instance
      validRegex: "/.{1,}/"
    - id: $$cap_shellhub_tenant_secret
      label: Shellhub Tenant Secret
      defaultValue: "/host/etc/shellhub.key"
      description: The tenant secret of your Shellhub instance
    - id: $$cap_shellhub_server_url
      label: Shellhub Server URL
      defaultValue: "https://app.shellhub.cloud"
      description: The URL to your Shellhub instance

  displayName: "Shellhub"
  description: "A shellhub instance"
########

services:
  agent:
    container_name: shellhub
    restart: on-failure
    privileged: false
    network_mode: host
    pid: host
    volumes:
      - "/:/host"
      - "/dev:/dev"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/passwd:/etc/passwd"
      - "/etc/group:/etc/group"
      - "/etc/resolv.conf:/etc/resolv.conf"
      - "/var/run:/var/run"
      - "/var/log:/var/log"
    environment:
      - SHELLHUB_SERVER_ADDRESS=$$cap_shellhub_server_url
      - SHELLHUB_PRIVATE_KEY=$$cap_shellhub_tenant_secret
      - SHELLHUB_TENANT_ID=$$cap_shellhub_tenant_id
    image: "shellhubio/agent:$$cap_shellhub_version"
  ssh:
    image: shellhubio/ssh:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - PRIVATE_KEY=/run/secrets/ssh_private_key
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
      - SHELLHUB_BILLING=${SHELLHUB_BILLING}
      - RECORD_URL=${SHELLHUB_RECORD_URL}
      - BILLING_URL=${SHELLHUB_BILLING_URL}
      - WEBHOOK_URL=${SHELLHUB_WEBHOOK_URL}
      - WEBHOOK_PORT=${SHELLHUB_WEBHOOK_PORT}
      - WEBHOOK_SCHEME=${SHELLHUB_WEBHOOK_SCHEME}
    ports:
      - "${SHELLHUB_SSH_PORT}:2222"
    secrets:
      - ssh_private_key
    networks:
      - shellhub
  api:
    image: shellhubio/api:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - PRIVATE_KEY=/run/secrets/api_private_key
      - PUBLIC_KEY=/run/secrets/api_public_key
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_BILLING=${SHELLHUB_BILLING}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
      - STORE_CACHE=${SHELLHUB_STORE_CACHE}
      - GEOIP=${SHELLHUB_GEOIP}
      - MAXMIND_LICENSE=${SHELLHUB_MAXMIND_LICENSE}
      - RECORD_RETENTION=${SHELLHUB_RECORD_RETENTION}
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.api_worker.schedule: "${SHELLHUB_WORKER_SCHEDULE}"
      ofelia.job-exec.api_worker.command: "/api worker"
    depends_on:
      - mongo
    links:
      - mongo
    secrets:
      - api_private_key
      - api_public_key
    networks:
      - shellhub
  ui:
    image: shellhubio/ui:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - SHELLHUB_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - SHELLHUB_BILLING=${SHELLHUB_BILLING}
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
    depends_on:
      - api
    networks:
      - shellhub
  gateway:
    image: shellhubio/gateway:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - SHELLHUB_VERSION=${SHELLHUB_VERSION}
      - SHELLHUB_SSH_PORT=${SHELLHUB_SSH_PORT}
      - SHELLHUB_PROXY=${SHELLHUB_PROXY}
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
    depends_on:
      - api
      - ui
    networks:
      - shellhub
  cli:
    image: shellhubio/cli:${SHELLHUB_VERSION}
    entrypoint: /bin/sleep infinity
    restart: unless-stopped
    environment:
      - STORE_CACHE=${SHELLHUB_STORE_CACHE}
    depends_on:
      - api
      - mongo
    networks:
      - shellhub
  mongo:
    image: mongo:4.4.8
    restart: unless-stopped
    healthcheck:
      test: 'test $$(echo "rs.initiate({ _id: ''rs'', members: [ { _id: 0, host: ''mongo:27017'' } ] }).ok || rs.status().ok" | mongo --quiet) -eq 1'
      interval: 30s
      start_period: 10s
    command: ["--replSet", "rs", "--bind_ip_all"]
    networks:
      - shellhub
  scheduler:
    image: mcuadros/ofelia:v0.3.4
    depends_on:
      - api
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
