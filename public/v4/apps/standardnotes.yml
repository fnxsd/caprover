# @format

captainVersion: 4

services:
  $$cap_appname-syncing-server-js:
    image: standardnotes/syncing-server-js:$$cap_syncing_server_version
    depends_on:
      - $$cap_appname-db
      - $$cap_appname-cache
    entrypoint:
      [
        "./wait-for.sh",
        "db",
        "3306",
        "./wait-for.sh",
        "cache",
        "6379",
        "./docker/entrypoint.sh",
        "start-web"
      ]
    environment:
      NEW_RELIC_ENABLED: $$cap_new_relic_enabled
      NEW_RELIC_NO_CONFIG_FILE: true
      NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: $$cap_new_relic_distributed_tracing_enabled
      NEW_RELIC_LOG_ENABLED: $$cap_new_relic_log_enabled
      NEW_RELIC_LOG_LEVEL: $$cap_new_relic_log_level
      NEW_RELIC_APP_NAME: $$cap_new_relic_app_name
      NEW_RELIC_LICENSE_KEY: $$cap_new_relic_license_key
      NEW_RELIC_LABELS: $$cap_new_relic_labels

      PORT: 3000
      REDIS_URL: redis://srv-captain--$$cap_appname-cache:6379
      REDIS_EVENTS_CHANNEL: "events"
      AUTH_SERVER_URL: http://srv-captain--$$cap_appname-auth:3000
      DB_HOST: srv-captain--$$cap_appname-db
      DB_REPLICA_HOST: srv-captain--$$cap_appname-db
      DB_PORT: 3306
      DB_DATABASE: $$cap_db_database
      DB_USERNAME: $$cap_db_user
      DB_PASSWORD: $$cap_db_pass
      AUTH_JWT_SECRET: $$cap_jwt_secret
      DB_DEBUG_LEVEL: all
      DB_MIGRATIONS_PATH: dist/migrations/*.js
    restart: unless-stopped
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-syncing-server-js-worker:
    image: standardnotes/syncing-server-js:$$cap_syncing_server_version
    depends_on:
      - $$cap_appname-db
      - $$cap_appname-cache
      - $$cap_appname-syncing-server-js
    entrypoint:
      [
        "./wait-for.sh",
        "db",
        "3306",
        "./wait-for.sh",
        "cache",
        "6379",
        "./wait-for.sh",
        "syncing-server-js",
        "3000",
        "./docker/entrypoint.sh",
        "start-worker"
      ]
    environment:
      NEW_RELIC_ENABLED: $$cap_new_relic_enabled
      NEW_RELIC_NO_CONFIG_FILE: true
      NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: $$cap_new_relic_distributed_tracing_enabled
      NEW_RELIC_LOG_ENABLED: $$cap_new_relic_log_enabled
      NEW_RELIC_LOG_LEVEL: $$cap_new_relic_log_level
      NEW_RELIC_APP_NAME: $$cap_new_relic_app_name
      NEW_RELIC_LICENSE_KEY: $$cap_new_relic_license_key
      NEW_RELIC_LABELS: $$cap_new_relic_labels

      PORT: 3000
      REDIS_URL: redis://srv-captain--$$cap_appname-cache:6379
      REDIS_EVENTS_CHANNEL: "events"
      AUTH_SERVER_URL: http://srv-captain--$$cap_appname-auth:3000
      DB_HOST: srv-captain--$$cap_appname-db
      DB_REPLICA_HOST: srv-captain--$$cap_appname-db
      AUTH_JWT_SECRET: $$cap_jwt_secret
      DB_PORT: 3306
      DB_DATABASE: $$cap_db_database
      DB_USERNAME: $$cap_db_user
      DB_PASSWORD: $$cap_db_pass
      DB_DEBUG_LEVEL: all
      DB_MIGRATIONS_PATH: dist/migrations/*.js
    restart: unless-stopped
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname:
    image: standardnotes/api-gateway:$$cap_api_gateway_version
    depends_on:
      - $$cap_appname-auth
      - $$cap_appname-syncing-server-js
    caproverExtra:
      containerHttpPort: 3000
    environment:
      NEW_RELIC_ENABLED: $$cap_new_relic_enabled
      NEW_RELIC_NO_CONFIG_FILE: true
      NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: $$cap_new_relic_distributed_tracing_enabled
      NEW_RELIC_LOG_ENABLED: $$cap_new_relic_log_enabled
      NEW_RELIC_LOG_LEVEL: $$cap_new_relic_log_level
      NEW_RELIC_APP_NAME: $$cap_new_relic_app_name
      NEW_RELIC_LICENSE_KEY: $$cap_new_relic_license_key
      NEW_RELIC_LABELS: $$cap_new_relic_labels

      PORT: 3000
      AUTH_JWT_SECRET: $$cap_jwt_secret
      REDIS_URL: redis://srv-captain--$$cap_appname-cache:6379
      REDIS_EVENTS_CHANNEL: "api-gateway-events"
      AUTH_SERVER_URL: http://srv-captain--$$cap_appname-auth:3000
      SYNCING_SERVER_JS_URL: http://srv-captain--$$cap_appname-syncing-server-js
      DB_HOST: srv-captain--$$cap_appname-db
      DB_REPLICA_HOST: srv-captain--$$cap_appname-db
      DB_PORT: 3306
      DB_DATABASE: $$cap_db_database
      DB_USERNAME: $$cap_db_user
      DB_PASSWORD: $$cap_db_pass
      DB_DEBUG_LEVEL: all
      DB_MIGRATIONS_PATH: dist/migrations/*.js
      VERSION: local
      NODE_ENV: production
      LOG_LEVEL: info
    entrypoint:
      [
        "./wait-for.sh",
        "auth",
        "3000",
        "./wait-for.sh",
        "syncing-server-js",
        "3000",
        "./docker/entrypoint.sh",
        "start-web"
      ]
    restart: unless-stopped

  $$cap_appname-auth:
    image: standardnotes/auth:$$cap_api_auth_version
    depends_on:
      - $$cap_appname-db
      - $$cap_appname-cache
      - $$cap_appname-syncing-server-js
    entrypoint:
      [
        "./wait-for.sh",
        "db",
        "3306",
        "./wait-for.sh",
        "cache",
        "6379",
        "./wait-for.sh",
        "syncing-server-js",
        "3000",
        "./docker/entrypoint.sh",
        "start-web"
      ]

    environment:
      NEW_RELIC_ENABLED: $$cap_new_relic_enabled
      NEW_RELIC_NO_CONFIG_FILE: true
      NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: $$cap_new_relic_distributed_tracing_enabled
      NEW_RELIC_LOG_ENABLED: $$cap_new_relic_log_enabled
      NEW_RELIC_LOG_LEVEL: $$cap_new_relic_log_level
      NEW_RELIC_APP_NAME: $$cap_new_relic_app_name
      NEW_RELIC_LICENSE_KEY: $$cap_new_relic_license_key
      NEW_RELIC_LABELS: $$cap_new_relic_labels

      PORT: 3000
      DB_HOST: srv-captain--$$cap_appname-db
      DB_REPLICA_HOST: srv-captain--$$cap_appname-db
      DB_PORT: 3306
      DB_DATABASE: $$cap_db_database
      DB_USERNAME: $$cap_db_user
      DB_PASSWORD: $$cap_db_pass
      DB_DEBUG_LEVEL: all
      DB_MIGRATIONS_PATH: dist/migrations/*.js
      REDIS_URL: redis://srv-captain--$$cap_appname-cache:6379
      AUTH_JWT_SECRET: $$cap_jwt_secret
      AUTH_SERVER_URL: http://srv-captain--$$cap_appname-auth:3000
      ENCRYPTION_SERVER_KEY: $$cap_encryption_server_key
      EPHEMERAL_SESSION_AGE: 259200
      REFRESH_TOKEN_AGE: 31556926
      ACCESS_TOKEN_AGE: 5184000
      PSEUDO_KEY_PARAMS_KEY: $$cap_encryption_server_key
      REDIS_EVENTS_CHANNEL: "auth-events"
      DISABLE_USER_REGISTRATION: $$cap_disable_user_registration
      JWT_SECRET: $$cap_jwt_secret
      LEGACY_JWT_SECRET: $$cap_jwt_secret
      VERSION: local
      NODE_ENV: production
      LOG_LEVEL: info
      MAX_LOGIN_ATTEMPTS: $$cap_max_login_attempts
    restart: unless-stopped
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-auth-worker:
    image: standardnotes/auth:$$cap_api_auth_version
    depends_on:
      - $$cap_appname-db
      - $$cap_appname-cache
      - $$cap_appname-auth
    entrypoint:
      [
        "./wait-for.sh",
        "db",
        "3306",
        "./wait-for.sh",
        "cache",
        "6379",
        "./wait-for.sh",
        "auth",
        "3000",
        "./docker/entrypoint.sh",
        "start-worker"
      ]

    environment:
      NEW_RELIC_ENABLED: $$cap_new_relic_enabled
      NEW_RELIC_NO_CONFIG_FILE: true
      NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: $$cap_new_relic_distributed_tracing_enabled
      NEW_RELIC_LOG_ENABLED: $$cap_new_relic_log_enabled
      NEW_RELIC_LOG_LEVEL: $$cap_new_relic_log_level
      NEW_RELIC_APP_NAME: $$cap_new_relic_app_name
      NEW_RELIC_LICENSE_KEY: $$cap_new_relic_license_key
      NEW_RELIC_LABELS: $$cap_new_relic_labels
      PORT: 3000
      DB_HOST: srv-captain--$$cap_appname-db
      DB_REPLICA_HOST: srv-captain--$$cap_appname-db
      DB_PORT: 3306
      DB_DATABASE: $$cap_db_database
      DB_USERNAME: $$cap_db_user
      DB_PASSWORD: $$cap_db_pass
      DB_DEBUG_LEVEL: all
      DB_MIGRATIONS_PATH: dist/migrations/*.js
      REDIS_URL: redis://srv-captain--$$cap_appname-cache:6379
      AUTH_JWT_SECRET: $$cap_jwt_secret
      AUTH_SERVER_URL: http://srv-captain--$$cap_appname-auth:3000
      ENCRYPTION_SERVER_KEY: $$cap_encryption_server_key
      EPHEMERAL_SESSION_AGE: 259200
      REFRESH_TOKEN_AGE: 31556926
      ACCESS_TOKEN_AGE: 5184000
      PSEUDO_KEY_PARAMS_KEY: $$cap_encryption_server_key
      REDIS_EVENTS_CHANNEL: "auth-events"
      DISABLE_USER_REGISTRATION: $$cap_disable_user_registration
      JWT_SECRET: $$cap_jwt_secret
      LEGACY_JWT_SECRET: $$cap_jwt_secret
      VERSION: local
      NODE_ENV: production
      LOG_LEVEL: info
      MAX_LOGIN_ATTEMPTS: $$cap_max_login_attempts
    restart: unless-stopped
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-db:
    image: mysql:$$cap_mysql_version
    environment:
      NEW_RELIC_ENABLED: $$cap_new_relic_enabled
      NEW_RELIC_NO_CONFIG_FILE: true
      NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: $$cap_new_relic_distributed_tracing_enabled
      NEW_RELIC_LOG_ENABLED: $$cap_new_relic_log_enabled
      NEW_RELIC_LOG_LEVEL: $$cap_new_relic_log_level
      NEW_RELIC_APP_NAME: $$cap_new_relic_app_name
      NEW_RELIC_LICENSE_KEY: $$cap_new_relic_license_key
      NEW_RELIC_LABELS: $$cap_new_relic_labels

      MYSQL_DATABASE: $$cap_db_database
      MYSQL_USER: $$cap_db_user
      MYSQL_PASSWORD: $$cap_db_pass
      MYSQL_ROOT_PASSWORD: $$cap_db_pass
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    volumes:
      - $$cap_appname-data-mysql:/var/lib/mysql
    caproverExtra:
      notExposeAsWebApp: true

  $$cap_appname-cache:
    image: redis:alpine
    volumes:
      - $$cap_appname-data-redis:/data
    restart: unless-stopped
    caproverExtra:
      notExposeAsWebApp: true

caproverOneClickApp:
  variables:
    - id: $$cap_db_database
      label: Database name
      defaultValue: standardnotes
      description: Nmae of my MySQL db
    - id: $$cap_db_pass
      label: MySQL Root password
      description: "Root password that will be created on MySQL"
      defaultValue: $$cap_gen_random_hex(16)
    - id: $$cap_db_user
      label: Database user
      description: Database user
      defaultValue: standardnotes
      validRegex: "/^([a-zA-Z0-9])+$/"
    - id: $$cap_api_auth_version
      label: Standardnotes auth version
      defaultValue: "1.38.0"
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/standardnotes/auth/tags
    - id: $$cap_syncing_server_version
      label: Standardnotes syncinf server version
      defaultValue: "1.46.1"
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/standardnotes/syncing-server-js/tags
    - id: $$cap_api_gateway_version
      defaultValue: "1.33.0"
      label: Standardnotes api gateway version
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/standardnotes/api-gateway/tags
    - id: $$cap_disable_user_registration
      defaultValue: "false"
      validRegex: "/^(true|false)$/"
      label: Disable user registration
      description: Disable user registration
    - id: $$cap_jwt_secret
      label: JWT Secret Key
      description: Use a random string
      defaultValue: $$cap_gen_random_hex(64)
    - id: $$cap_encryption_server_key
      label: Secret Key Base
      description: A secret key used for cryptographic functions
      defaultValue: $$cap_gen_random_hex(64)
    - id: $$cap_max_login_attempts
      defaultValue: 6
      description: "Max login attempts"
    - id: $$cap_mysql_version
      label: MySQL Version
      defaultValue: "8"
      description: Check out their Docker page for the valid tags https://hub.docker.com/r/library/mysql/tags/
      validRegex: '/^([^\s^\/])+$/'
    - id: $$cap_new_relic_enabled
      defaultValue: "false"
      label: New relic enabled

      validRegex: "/^(true|false)$/"
    - id: $$cap_new_relic_labels
      description: Adds tags. Specify your tags as objects or a semicolon-delimited string of colon-separated pairs (for example, Server:One;Data Center:Primary).
      label: New relic labels
    - id: $$cap_new_relic_license_key
      description: Specifies the license key of your New Relic account. This key associates your app's metrics with your New Relic account.
      label: New relic log level
    - id: $$cap_new_relic_app_name
      defaultValue: standardnotes
      label: New Relic App Name
      description: >-
        The application name used to aggregate data in the New Relic One UI. To report data to multiple apps at the same time, specify a list of names separated with a semicolon ;. 
        Do not put a space before the semicolon, which causes the Python config parser to interpret the name as an embedded comment.
    - id: $$cap_new_relic_log_level
      defaultValue: info
      label: New relic log level
      description: Sets the level of detail of log messages. Possible values, in increasing order of detail, are critical, error, warning, info, and debug.
      validRegex: "/^(info|critical|error|warning|debug)$/"
    - id: $$cap_new_relic_log_enabled
      label: New relic log enabled
      defaultValue: "false"
      validRegex: "/^(true|false)$/"
    - id: $$cap_new_relic_distributed_tracing_enabled
      label: New relic distributed tracing enabled
      defaultValue: "true"
      validRegex: "/^(true|false)$/"
      description: See https://docs.newrelic.com/docs/distributed-tracing/concepts/introduction-distributed-tracing/
  instructions:
    start: >-
      Standard Notes is free and open-source software, which means self-hosting both ends (the app and server) is possible and relatively simple.
      - The machine you will be running the infrastructure on has at least 2GB of memory.
    end: >-
      Please wait for 2 minutes. Appsmith is deployed and available as $$cap_appname. For a more configuration overview, visit https://docs.standardnotes.com/self-hosting/configuration-options
  displayName: Standard Notes
  isOfficial: false
  description: Standard Notes is an easy-to-use encrypted note-taking app for digitalists and professionals. Capture your notes, documents, and life’s work all in one place.
  documentation: Adapted from https://docs.standardnotes.com/self-hosting/docker
